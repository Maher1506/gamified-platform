@model GamifiedPlatform.Models.Instructor

@{
    ViewData["Title"] = "Instructor Dashboard";
}

@* Use Bootstrap 4/5 for clean, responsive design *@
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">

<style>
    .dashboard-container {
        margin-top: 30px;
    }

    .card {
        border: none;
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
    }

    .card-header {
        background-color: #6c757d; /* Grey color for card header */
        color: white;
        font-size: 18px;
        padding: 15px;
        border-radius: 8px 8px 0 0;
    }

    .card-body {
        background-color: #f4f4f4; /* Soft grey background for content */
        padding: 20px;
        border-radius: 0 0 8px 8px;
    }

        .card-body ul {
            list-style-type: none;
            padding-left: 0;
        }

            .card-body ul li {
                font-size: 16px;
                padding: 5px 0;
            }

    .btn {
        padding: 10px 20px;
        font-size: 16px;
        border-radius: 5px;
        width: 100%;
    }

    .btn-primary {
        background-color: #28a745; /* Green for primary buttons */
        border: none;
    }

        .btn-primary:hover {
            background-color: #218838; /* Darker green on hover */
        }

    .btn-secondary {
        background-color: #17a2b8; /* Light blue for secondary buttons */
        border: none;
    }

        .btn-secondary:hover {
            background-color: #138496; /* Darker blue on hover */
        }

    .mt-3 {
        margin-top: 15px;
    }

    .dashboard-header {
        text-align: center;
        margin-bottom: 30px;
    }

    .btn-container {
        display: flex;
        justify-content: space-between;
        gap: 15px;
    }
</style>

<div class="container dashboard-container">
    <div class="dashboard-header">
        <h2>Welcome, @Model.Name</h2>
        <p class="lead">Your instructor dashboard for managing your profile and assessments.</p>
    </div>

    <!-- Profile Section -->
    <div class="card">
        <div class="card-header">
            <h4>Your Profile Details</h4>
        </div>
        <div class="card-body">
            <ul>
                <li><strong>Name:</strong> @Model.Name</li>
                <li><strong>Email:</strong> @Model.Email</li>
                <li><strong>Latest Qualification:</strong> @Model.LatestQualification</li>
                <li><strong>Expertise Area:</strong> @Model.ExpertiseArea</li>
            </ul>
            <a href="@Url.Action("Edit", "Instructors", new { id = Model.InstructorId })" class="btn btn-primary">Edit Profile</a>
        </div>
    </div>

    <!-- Assessments Section -->
    <div class="card">
        <div class="card-header">
            <h4>Assessments Management</h4>
        </div>
        <div class="card-body">
            <a href="@Url.Action("Index", "Assessments")" class="btn btn-secondary">View All Assessments</a>
        </div>
    </div>

    <!-- Notification Section -->
    <div class="card">
        <div class="card-header">
            <h4>Send Notification</h4>
        </div>
        <div class="card-body">
            <a href="@Url.Action("SendNotification", "Instructors")" class="btn btn-primary mt-3">Send Notification to Learner</a>
        </div>
    </div>

    <!-- View Learners' Assessment Scores -->
    <div class="card">
        <div class="card-header">
            <h4>View Learners' Assessment Scores</h4>
        </div>
        <div class="card-body">
            <a href="@Url.Action("ViewScores", "Instructors")" class="btn btn-secondary">View and Edit Learner Grades</a>
        </div>
    </div>

    <!-- Manage Courses Section -->
    <div class="card">
        <div class="card-header">
            <h4>Manage Courses</h4>
        </div>
        <div class="card-body">
            <!-- Button to view all courses -->
            <a href="@Url.Action("Index", "Courses")" class="btn btn-secondary">View All Courses</a>
        </div>
    </div>

    <!-- New Activity Section -->
    <div class="card">
        <div class="card-header">
            <h4>Create New Activity</h4>
        </div>
        <div class="card-body">
            <p>Use this form to create a new activity for a course module.</p>
            <a href="@Url.Action("CreateActivity", "Instructors")" class="btn btn-primary">Create Activity</a>
        </div>
    </div>

    <!-- View Learning Activities Section -->
    <div class="card mt-4">
        <div class="card-header bg-info text-white">
            <h4>Manage Learning Activities</h4>
        </div>
        <div class="card-body">
            <p>View and manage all learning activities associated with your courses.</p>
            <a href="@Url.Action("Index", "LearningActivities")" class="btn btn-primary">View Learning Activities</a>
        </div>
    </div>

    <!-- Enroll Learner in a Course Section -->
    <div class="card mt-4">
        <div class="card-header bg-warning text-white">
            <h4>Enroll Learner in a Course</h4>
        </div>
        <div class="card-body">
            <p>Use this form to enroll a learner in a specific course.</p>
            <a href="@Url.Action("EnrollLearner", "Instructors")" class="btn btn-primary">Enroll Learner</a>
        </div>
    </div>
    <!-- Create Discussion Section -->
    <div class="card mt-4">
        <div class="card-header bg-primary text-white">
            <h4>Create Discussion Forum</h4>
        </div>
        <div class="card-body">
            <p>Use this form to create a discussion forum for a specific course module.</p>
            <form asp-action="AddForum" method="post">
                <input for="instructorID" type="hidden" name="instructorID" value="@Model.InstructorId" />
                <div class="form-group">
                    <label for="moduleID">Module ID</label>
                    <input type="number" class="form-control" id="moduleID" name="moduleID" placeholder="Enter Module ID" required>
                </div>
                <div class="form-group">
                    <label for="courseID">Course ID</label>
                    <input type="number" class="form-control" id="courseID" name="courseID" placeholder="Enter Course ID" required>
                </div>
                <div class="form-group">
                    <label for="title">Title</label>
                    <input type="text" class="form-control" id="title" name="title" placeholder="Enter Discussion Title" required>
                </div>
                <div class="form-group">
                    <label for="description">Description</label>
                    <textarea class="form-control" id="description" name="description" rows="3" placeholder="Enter Description" required></textarea>
                </div>
                <button type="submit" class="btn btn-primary">Create Discussion</button>
            </form>
            @if (ViewContext.HttpContext.Request.Method == "POST" && !ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger">
                    @Html.ValidationSummary(false, "Please fix the following errors:")
                </div>
            }
            @if (ViewData["SuccessMessage"] != null)
            {
                <div class="alert alert-success mt-3">
                    @ViewData["SuccessMessage"]
                </div>
            }
        </div>
    </div>

    <!-- Add Path Section -->
    <div class="card mt-4">
        <div class="card-header bg-success text-white">
            <h4>Assign Path to Learner</h4>
        </div>
        <div class="card-body">
            <p>Use this form to assign a path to a learner by providing the necessary details.</p>
            <form asp-action="AddPath" method="post" class="mt-3">
                <input for="instructorID" type="hidden" name="instructorID" value="@Model.InstructorId" />
                <div class="form-group">
                    <label for="LearnerID">Learner ID</label>
                    <input type="number" class="form-control" id="LearnerID" name="LearnerID" placeholder="Enter Learner ID" required>
                </div>
                <div class="form-group">
                    <label for="profileID">Profile ID</label>
                    <input type="number" class="form-control" id="profileID" name="profileID" placeholder="Enter Profile ID" required>
                </div>
                <div class="form-group">
                    <label for="completionStatus">Completion Status</label>
                    <input type="text" class="form-control" id="completionStatus" name="completionStatus" placeholder="Enter Completion Status" required>
                </div>
                <div class="form-group">
                    <label for="customContent">Custom Content</label>
                    <textarea class="form-control" id="customContent" name="customContent" rows="3" placeholder="Enter Custom Content"></textarea>
                </div>
                <div class="form-group">
                    <label for="adaptiveRules">Adaptive Rules</label>
                    <textarea class="form-control" id="adaptiveRules" name="adaptiveRules" rows="3" placeholder="Enter Adaptive Rules"></textarea>
                </div>
                <button type="submit" class="btn btn-primary">Assign Path</button>
            </form>
            @if (ViewContext.HttpContext.Request.Method == "POST" && !ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger">
                    @Html.ValidationSummary(false, "Please fix the following errors:")
                </div>
            }
            @if (ViewData["SuccessMessage"] != null)
            {
                <div class="alert alert-success mt-3">
                    @ViewData["SuccessMessage"]
                </div>
            }
        </div>
    </div>
    

</div>
